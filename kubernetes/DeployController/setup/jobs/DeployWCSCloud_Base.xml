<?xml version='1.0' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.13">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.1.8">
      <jobProperties/>
      <triggers/>
      <parameters/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>Deploy WCS Cloud Environment</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>Tenant</name>
          <description>tenant name</description>
          <defaultValue>demo</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>EnvName</name>
          <description>environment name</description>
          <defaultValue>qa</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>EnvType</name>
          <description>environment type [auth|live|all]</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>auth</string>
              <string>live</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NameSpace</name>
          <description></description>
          <defaultValue>default</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>DeployAction</name>
          <description>support install / update / delete action</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>install</string>
              <string>update</string>
              <string>delete</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <org.biouno.unochoice.DynamicReferenceParameter plugin="uno-choice@1.5.3">
          <name>HelmChart_Values</name>
          <description>Before you trigger this job, please make sure all value in HelmChart_Values are correct.

Tenant / EnvType / NameSpace / EnvType / Vault Token / Vault URL will be updated based on the input from field on UI or get from Jenkins global variables.

But there still have some other important configuration must set correctly
1. ImageRepo
2. SPIUserName
3. SPIUserPWDAES
4. SPIUserPWDBase64
5. Merchantkey
6. Commerce V9 Image Tag
7. SupportC Image Tag
8. ExternalDomian
9. ConfigureMode ( Vault is the default config mode )
</description>
          <randomName>choice-parameter-1625930349815673</randomName>
          <visibleItemCount>1</visibleItemCount>
          <script class="org.biouno.unochoice.model.GroovyScript">
            <secureScript plugin="script-security@1.29.1">
              <script>vaule_configmap_name=&quot;helmchart-values&quot;

def process = [&quot;python&quot;,&quot;/commerce-devops-utilities/utilities/kube/kubcli.py&quot;,&quot;fetchconfmap&quot;,&quot;-tenant&quot;,Tenant,&quot;-env&quot;,EnvName,&quot;-envtype&quot;,EnvType,&quot;-name&quot;,vaule_configmap_name,&quot;-namespace&quot;,NameSpace].execute()
result=process.in.text

if( result == &quot;&quot; ){
      result=
        &quot;&quot;&quot;
# Default values for wcv9.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Common configuration for all component docker 
Common:
  ReplicaCount: 1
  Cpu: 0.5m
  Memory: 2048Mi
  ## VaultToken specify the Vault token which will be used to connect to Vault server to fetch issue CA or fetch encrypted value based on tenant / env / envtype
  VaultToken: ${vault_token}
  ## DBType just will work since 9.0.0.4, because since 9.0.0.4, Commerce V9 start to support mutliple database.
  DBType: db2
  Tenant: ${Tenant}
  EnvironmentName: ${EnvName}
  EnvironmentType: ${EnvType}  
  ImageRepo: ${dockerRepoHost}/commerce/
  SPIUserName: spiuser
  SPIUserPWDAES: eNdqdvMAUGRUbiuqadvrQfMELjNScudSp5CBWQ8L6aw=
  SPIUserPWDBase64: c3BpdXNlcjpwYXNzdzByZA==
  NameSpace: ${NameSpace}
  ## SessionAffinity is not enable as default, for using it, the connection between store and transaction will passthrough ingress. Meanwhile, the TLS termination is on Ingress. For make the transaction server point
  ## to Loadbalance, you need to provide Loadbalance address.
  SessionAffinity:
        Enable: false
        LoadBalanceAddress:
  VaultURL: ${vault_url}/v1
  ExternalDomian: ibm.com
  CommerceVersion:
  OverridePreconfig: 
  ## IngressSecrete used to specify if need Helm to auto generate the secret for ingress. For production env, customer can choose generate the secret with real CA certification
  IngressSecrete:
    AutoCreate: true
    ReplaceExist: true
  ## PersistenVolumeClaim
  PersistenVolumeClaim:
    AutoCreate: false
    StorageClass: glusterfs
    AccessModes: ReadWriteMany
    StorageSize: 1Gi
    Force: false
    ClearPVC: false 
  ConfigureMode: Vault
  BindingConfigMap: 
  VaultCA:
       Enable: true
       DNSNAME_IN_SubjectAlternativeName: None
       CONTAINER_HOSTNAME: None
  NodeSelector: {}
Tsdb:
  Name: ts-db
  Replica: 1
  Image: ts-db
  Tag: 9.0.0.4
  EnvParameters: {}
  NodeSelector: {}
Tsapp:
  Name: ts-app
  Replica: 1
  Image: ts-app
  Tag: 9.0.0.4
  Merchantkey: eZrWIdOyaDv5FCOTK32Uni288jgIHDv/P9wxhzKmHdiGZ+n8WJ+Ah56uPbfZ9yJWtjQlGczlmr6OgvArFHCgZQ==
  EnvParameters: {}
  NodeSelector: {}
SearchappMaster:
  Name: search-app-master
  Replica: 1
  Image: search-app
  Tag: 9.0.0.4
  EnvParameters: {}
  NodeSelector: {}
SearchappRepeater:
  Name: search-app-repeater
  Replica: 1
  Image: search-app
  Tag: 9.0.0.4
  EnvParameters: {}
  NodeSelector: {}
SearchappSlave:
  Name: search-app-slave
  Replica: 1
  Image: search-app
  Tag: 9.0.0.4
  EnvParameters: {}
  NodeSelector: {}
Tsweb:
  Name: ts-web
  Replica: 1
  Image: ts-web
  Tag: 9.0.0.4
  EnvParameters: {}
  NodeSelector: {}
Crsapp:
  Name: crs-app
  Image: crs-app
  Tag: 9.0.0.4
  Replica: 1
  EnvParameters: {}
  NodeSelector: {}
#Just keep this for support 9.0.0.0 and 9.0.0.1
InitC:
  Image: init-wcs
  Tag: 1.6
SupportC:
  Image: supportcontainer
  Tag: 1.9.6
        &quot;&quot;&quot;
}


html=
&quot;&quot;&quot;
&lt;p&gt;
  &lt;textarea type=&quot;text&quot; style=&quot;width:700px;height:400px;&quot; name=&quot;value&quot; &gt;${result}&lt;/textarea&gt;
&lt;/p&gt;
&quot;&quot;&quot;</script>
              <sandbox>false</sandbox>
            </secureScript>
            <secureFallbackScript plugin="script-security@1.29.1">
              <script></script>
              <sandbox>false</sandbox>
            </secureFallbackScript>
          </script>
          <projectName>DeployWCSCloud_Base</projectName>
          <parameters class="linked-hash-map"/>
          <referencedParameters>Tenant,EnvName,EnvType,NameSpace</referencedParameters>
          <choiceType>ET_FORMATTED_HTML</choiceType>
          <omitValueField>true</omitValueField>
        </org.biouno.unochoice.DynamicReferenceParameter>
        <hudson.model.StringParameterDefinition>
          <name>HelmChart</name>
          <description>deployslave will be startup by set the helm chart repo which be configured in global variables with repo name as stable.  Please make sure the Helm Cart name exist on remote helm chart repo</description>
          <defaultValue>stable/WCSV9</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>ForceCreate</name>
          <description>True means will remove existed release with same name if it exist </description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>true</string>
              <string>false</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>ReuseValues</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>true</string>
              <string>false</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>DeleteAllAssociatedObject</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>true</string>
              <string>false</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>EnableTLS</name>
          <description>If helm enabled TLS for request, please select &quot;true&quot; and fill in below filed [ helm_ca | helm_cert | helm_key ] 
with certification for TLS</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>false</string>
              <string>true</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.TextParameterDefinition>
          <name>helm_ca</name>
          <description>Please fill in the helm_ca with the content from ca.pem which used to enable TLS for Helm. This field just work when you select &apos;EnableTLS&apos; to &apos;true&apos;</description>
          <defaultValue>-----BEGIN CERTIFICATE-----
MIIDUDCCAjigAwIBAgIJAP8EtW0FZnIjMA0GCSqGSIb3DQEBCwUAMB8xHTAbBgNV
BAMMFDEyNy4wLjAuMUAxNTMwNjA5NDkxMB4XDTE4MDcwMzA5MTgxMloXDTI4MDYz
MDA5MTgxMlowHzEdMBsGA1UEAwwUMTI3LjAuMC4xQDE1MzA2MDk0OTEwggEiMA0G
CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCuQXoE6pGHcwsbsonwoQtiO7J6NdOg
NIx90Q4cX1Dn0BYB7xG/+UdCW0Q0j8xqbJTtTsMAOcigzUGFt9Xp3uFcrLBy4bbO
KvQmpzobgI4+8LbwQ9KUetdAg3rrcfsRFTMQOH/I+FCV7mEB4+PdDfcYArYfCieD
HVkWvaYOQ6vCmZY8CvDgE8An94XklZAo0/c7EH/C2ydMO5LqEmQu+1ws83AHELdo
kj1H0+UZ7xgdn84VqL9fFKYFFLelovvbDqNIOMyPF3mNKkC7dTPe8z0NGWPS+yp1
5Wf+mdz+yGecoVE7cCIujGTyGsHi3Hr22nCXdMLVpexVcd66VCoTIr3bAgMBAAGj
gY4wgYswHQYDVR0OBBYEFAsxLv8Bd3W8qFrSkGi03Fpj5aFNME8GA1UdIwRIMEaA
FAsxLv8Bd3W8qFrSkGi03Fpj5aFNoSOkITAfMR0wGwYDVQQDDBQxMjcuMC4wLjFA
MTUzMDYwOTQ5MYIJAP8EtW0FZnIjMAwGA1UdEwQFMAMBAf8wCwYDVR0PBAQDAgEG
MA0GCSqGSIb3DQEBCwUAA4IBAQAiR2kwvlwwysJV2wm1wz8rWshZyUPrUFdu3apb
7b9cQNsW1TNleZOuv1IuTc7CwqY7rcRVnhCDJ63rqY6hAFjCK3APGmhkfz+Mwebd
38FgIhm7ytZKUJq+Yi6NnDkEUnilXP4+T3DDhGn4+PnbrGFFtYJ5O8sm933WVOCq
xDRU86KKykSrdcS/8og/X7VIAO5B4vmk74rHhFhGfl8MZMBoVgKXNoOTBpAyd0Dh
jFyBOF1/Md7bwvfqNdN1HrNneqKaSTN1ZpY9ef4CBe2sNRy48z2n4qPi0NQyKJ3d
XK6uAFGvTrEpCnfA/13fUM7ZZF9PCleVnDkq8VoLtqW0/M80
-----END CERTIFICATE-----</defaultValue>
        </hudson.model.TextParameterDefinition>
        <hudson.model.TextParameterDefinition>
          <name>helm_cert</name>
          <description>Please fill in the helm_cert with the content from ca.pem which used to enable TLS for Helm. This field just work when you select &apos;EnableTLS&apos; to &apos;true&apos;</description>
          <defaultValue>-----BEGIN CERTIFICATE-----
MIICqzCCAZMCCQCTKh7TpcNMwjANBgkqhkiG9w0BAQsFADAfMR0wGwYDVQQDDBQx
MjcuMC4wLjFAMTUzMDYwOTQ5MTAeFw0xODA3MTEwMzI5MDZaFw0xODEwMDkwMzI5
MDZaMBAxDjAMBgNVBAMMBWFkbWluMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB
CgKCAQEAsoZA8cwONrdSQAn+lSMLUntIS6c5zbty/cvd2+Ait/+jkr8YPlwqrkGJ
sLzuRBi9Z8OdYoF8t2rrGJ/3QAXFVrUakfx/pxw0Zfmzm8xPDUzKEg6FPszK+KO1
IK9kVXEbOyuUdYHaXqJTK99KRKGDSPsSgrsIERSQcK8DCvy/Oza/Nw0w20v8u4oN
khC9rEuOKpK0P6AqjCJNJ+dgBY2wAto8eEx1Wmyul2Rh3qtQ8L02TzGdXT4udfqY
2V7hZPh1+/3QStbXO1atiOOT8gM/Blln0peWby8nbw/Fp/oyg0tNqA7mc8utA3pt
TkxKvv+vR8KyVwxB1RZtD1N6BIuI+wIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBc
r5pItrbE5TDqDj9AAsNxpQrG3s2hnV3QzUDD6L4kfJcMprfLxmiznFb7/l4F0UOz
823rhe8UUeU6mvpxk0k0nyuv9FgR/GBUTE4K/DIqC3NhQ36zEFg84JSvzZ332K35
k2Io9zrZD3BuelS63jUdRQwhobLS7Wgvpvn2lNvjMR4ZqOcJ/zJIAGmTM2QaizUB
1BF3wLwN3fVGWW14edHJAB6ykRwEGfvTeKvq2uCAD6wZWMP4TSLGkMAJljdND5CE
THXJGWNGbXv8Y7a+3O3ePbxljQy78rbVvFH5rNMyKDXydOzbZdjH83m7XFAENXSc
I7sbYVfng8d3EqTIy+tU
-----END CERTIFICATE-----</defaultValue>
        </hudson.model.TextParameterDefinition>
        <hudson.model.TextParameterDefinition>
          <name>helm_key</name>
          <description>Please fill in the helm_key with the content from ca.pem which used to enable TLS for Helm. This field just work when you select &apos;EnableTLS&apos; to &apos;true&apos;</description>
          <defaultValue>-----BEGIN PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCyhkDxzA42t1JA
Cf6VIwtSe0hLpznNu3L9y93b4CK3/6OSvxg+XCquQYmwvO5EGL1nw51igXy3ausY
n/dABcVWtRqR/H+nHDRl+bObzE8NTMoSDoU+zMr4o7Ugr2RVcRs7K5R1gdpeolMr
30pEoYNI+xKCuwgRFJBwrwMK/L87Nr83DTDbS/y7ig2SEL2sS44qkrQ/oCqMIk0n
52AFjbAC2jx4THVabK6XZGHeq1DwvTZPMZ1dPi51+pjZXuFk+HX7/dBK1tc7Vq2I
45PyAz8GWWfSl5ZvLydvD8Wn+jKDS02oDuZzy60Dem1OTEq+/69HwrJXDEHVFm0P
U3oEi4j7AgMBAAECggEANTgiijKLljImOeMA2tK8oFUSI0NxzuvvhstMkyyJDRMP
X0LKZmSxcIsnEeHwoapCZHmDJId3d3JPLWMaoSJXRtbsWdLM9zNIR5IdwfcxJcTb
hHCBtkv0whSDfX/ryDDUrln6guE4CPgZFT4WdMk1Sv9V8FTzPaxEtuLlZFQeafcT
N1hvc4Gd/FYKEB7Z/RKvdQPBup7lRvkiFnwjk4BEafkRe+4J8Jix1ZUs+PI3WsuA
nPMoNz5hEB7qNwU0RIbslaVBISorjws55vehuz8ZhyAQ3GNRiSVfSYdl5c7Qlwfy
f8RuMBs/Hh4nCgVwTWGLsCbxX3MNh+urZ7wPHGUscQKBgQDoc66+82qzoTrb1duC
ZhI6BfCrIGUdGFQkbZJ/hxNRlCSO7+GMlGtu/2FU7sDeXmYetJsk1u188NOJAlVe
nHIYGkeNhQ/c91Q2S7lYv9qf0ZJD7l0AxHxpRgudG0l7st15Y+TyS6zE2q74LV+8
/ewZeG1l2j+yTxsutdJC1dgm+QKBgQDEnAmJtx8ge6dch1LvdZjHkwn2K2v0n41P
UnwOHIuxTtYGJpt/iD2SEAZ58TlCnP6+fsW7fZf8Fa7IKmHMI6tREn9wfBEoxEE+
nem9k2aaidZGVZIGNI9HjNC/ls9RfPDKRavz3IWYRs+b9vKhIuvQzhs3x3F3ad9D
fnM5JFhokwKBgFyfi+fmkoPVIODsDDWfem/IYieuFtxLD2wchR1vs1D0WMTj7NnZ
Yh2ugRgYsp1ovARMLu20/pikVYXoeh/i8suL3SsU9Ec1/kZMUiR8/h5koYWT+1cM
9A32rTYC43r4wKtYFKg/Yy5lfQbC/b0O6P8VL3JATtU8FDa+mHOtRh3xAoGADjwh
8KeiiE6LooZludKw2hpKSVmBenem2oxlUPw+HPtRQaa/8W7izlV8so2FkM4fH5m8
JUQFognL2tA+vnICsF7/fRxufZ4f/zGdv80RS7UZH4SIiwx5JzwJzSVVI1hBctOy
jHh1772IwIkTrhkCK98QV2yISZYPxSo9m3CHOiMCgYEAmCdu9MMNZaxYVT4zOEIh
6j8xuCWwwkJFWoNeAi5qt5gNbeWWOMBri6hFqHTlvBaP6QPKw4UVZ5AUOhPfnKB1
LrQT6lr0X+Cj7ctsHcM5oYWJre7WRJ6wpcxZR5m6isJWOkxzklnP7AsaPzfHXC68
NkhJY3CydR+IUsFfhmLjTMA=
-----END PRIVATE KEY-----</defaultValue>
        </hudson.model.TextParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers/>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.36.1">
    <script>def label = &quot;HelmsDeploy-${UUID.randomUUID().toString()}&quot;

podTemplate(label: label,  containers: [
     containerTemplate(
            name: &apos;slaver&apos;,
            image: &quot;${dockerRepoHost}/commerce/deployslave:latest&quot;,
            ttyEnabled: true,
            privileged: true,
            command: &apos;cat&apos;,
            alwaysPullImage: true,
            envVars: [
                containerEnvVar(key: &apos;repo_name&apos;, value: &apos;test&apos;),
                containerEnvVar(key: &apos;repo_url&apos;, value: &apos;${helmChartsRepo}&apos;)
                ]
        ),
    containerTemplate(
            name: &apos;jnlp&apos;,
            image: &quot;${dockerRepoHost}/commerce/jnlp-slave:alpine&quot;,
            args: &apos;${computer.jnlpmac} ${computer.name}&apos;,
            command: &apos;&apos;

        )
  ],
  )


{
  node(label){
    container(&apos;slaver&apos;){
        stage(&apos;Update Helm Chart Index&apos;) {
                script {
                   sh &quot;helm init --stable-repo-url ${helmChartsRepo}&quot;
                   
                   if(env.EnableTLS == &apos;true&apos;){
                      sh &quot;echo &apos;${helm_ca}&apos; &gt; /home/jenkins/.helm/ca.pem&quot;
                      sh &quot;echo &apos;${helm_cert}&apos; &gt; /home/jenkins/.helm/cert.pem&quot;
                      sh &quot;echo &apos;${helm_key}&apos; &gt; /home/jenkins/.helm/key.pem&quot;
                   } 
                   
                   if(env.DeployAction != &apos;delete&apos;){
                      sh &quot;helm repo update&quot;
                   }else{
                       sh &quot;echo &apos;ignore this steps&apos;&quot;
                   }

                }

        }
        stage(&apos;Generate Template HelmChart Values&apos;) {
                script {
                   if(env.DeployAction != &apos;delete&apos;){
                      sh &quot;mkdir -p /tmp/${Tenant}${EnvName}${EnvType}&quot;
                      sh &quot;echo &apos;${HelmChart_Values}&apos; &gt; /tmp/${Tenant}${EnvName}${EnvType}/values.yaml&quot;
                   }else{
                       sh &quot;echo &apos;ignore this steps&apos;&quot;
                   }
                }

        }
        stage(&apos;Update Helm Chart Values Configuration&apos;) {
                script {
                   if(env.DeployAction != &apos;delete&apos;){
                      sh &quot;python3.6 /commerce-devops-utilities/utilities/kube/kubcli.py createconfmap -tenant ${Tenant} -env ${EnvName} -envtype ${EnvType} -namespace ${NameSpace} -name helmchart-values -configmaptype fromfile -configfiles /tmp/${Tenant}${EnvName}${EnvType}/values.yaml&quot;
                   }else{
                       sh &quot;echo &apos;ignore this steps&apos;&quot;
                   }
                }
        }
        stage(&apos;Deploy Commerce With HelmChart&apos;) {
               script {
                   if (env.DeployAction == &apos;install&apos;) {
                      sh &quot;python3.6 /commerce-devops-utilities/utilities/helm/helmcli.py helminstall -releasename ${Tenant}${EnvName}${EnvType} -helmchart ${HelmChart} -valuefile /tmp/${Tenant}${EnvName}${EnvType}/values.yaml -forcecreate ${ForceCreate} -namespace ${NameSpace} -tls ${EnableTLS}&quot;
                   }else if (env.DeployAction == &apos;update&apos;){
                      sh &quot;python3.6 /commerce-devops-utilities/utilities/helm/helmcli.py helmupgrade -releasename ${Tenant}${EnvName}${EnvType} -helmchart ${HelmChart} -valuefile /tmp/${Tenant}${EnvName}${EnvType}/values.yaml -tls ${EnableTLS}&quot;
                   }else if (env.DeployAction == &apos;delete&apos;){
                      sh &quot;python3.6 /commerce-devops-utilities/utilities/helm/helmcli.py helmdelete -releasename ${Tenant}${EnvName}${EnvType} -tls ${EnableTLS}&quot;
                      if(env.Action == &apos;DeleteAllAssociatedObject&apos;){
                          sh &quot;python3.6 /commerce-devops-utilities/utilities/kube/kubcli.py deleteconfmap -tenant ${Tenant} -env ${EnvName} -envtype ${EnvType} -name helmchart-values -namespace ${NameSpace}&quot;
                          sh &quot;python3.6 /commerce-devops-utilities/utilities/kube/kubcli.py deleteconfmap -releasename -env ${EnvName} -envtype ${EnvType} -name &apos;.*-dockerfile&apos; -namespace ${NameSpace}&quot;
                      }
                   }else{
                      sh &quot;echo &apos;unkonw action ${Action}, ignore it!&apos;&quot;
                   }
               }
        }
    }
  }
}

</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>